<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABQpJREFUeF7t
        Xetx2zAM9ggdoSNkg3aDdoN4g/S3nF68QbyBu0GyQbxBuoG9QbwBKwiUazOQSFEkAZv47r7LXSxSFCHi
        xYcWV4e1+bJYmftFY7bt37f2r7kg/g9+u++uVWTC2nztOtoVgJ/brqwiEeAtjxOESxCMjphZaMxdy4+z
        Tp3Lfcs7W7tiEhqzPOvI1FzauyiCkFcYPVUoQXg034nOy0O4l2IEaMBT2gwfP9TQj4GKK/Lzxd5dcYGS
        qsqlqi4C6JLSHZafe9sKRQfO0dFTR8kZGvP6qYPK89W2pnKgZ0V1UHmqx9Xi0fwkO4eD0Jbq0Zj1p47h
        49q2qmI0Zud0Cid3tlUVozHvTqdw8t22qmLQHcPH6kF1CierB9UpnKweVKdwsnqszF+yYzgIbake6vYK
        gwaGwiArdaIZX00uSoSm34VBJ6gEojGHT51UjgfbCsUJnKNER8cAeGyJ2o5BoMd1dDosJ4/qWflQUnWp
        qgqELrYWiLxCUWFEATfspHSHoS7dsDMLYHRX5o/TsdMJdagBTwjYuBkjGBSEbvrMBnSNl1Y41FzKrvsN
        ssg6IhQKRSH8Nt86Nuap48o8t3yL5LOt5+FUr2IAaKzhqAzodNjSVnKP4d7eE+79o07jj24snlXCu2tq
        iNCmGz8r5b8QXs4e/DqIKu9GhAMqIM05JVL40j3TVQKNaEl7UI7gJFwVbmtUDHFrn1Y4ZC18y03hQuGc
        F+ej0FQ+eCEy3djchPNSBBr6xmychtZDcI1FoU5VdUlRW6rrVFUu9zKCx7q8Kh+ZtzNgJH6bwV8sWQ08
        ZkrphtVKNgO/Mr/IBimBhWMTVVU+Fj7LUVWVn7DQoggk7QmUzuxrhzE9oqoqnJljk2uc8ePnxvZeYqiq
        msPE64lVVc1l4nO4VFWlYKK0imZyU3Km6kJVpZncdJypumqedMrHSNWlqioXI6d8ZZ0WelucnBGWOel0
        6PJD0DYYvWNpif53uBbLcB7bQROy5UHATC5dSVnCAQJwssMySfoBHRTY2Qt1ljycYIiBGWHuTC6ewZh3
        PqEXDv95j56v+/CmR3ajaigXULXxnfs4uFqFL+Y4sAjCBQqGw9YMZIR5DPkmTI8WAr6UHLGXE5uUn5I9
        ihgVQ8DRUtLwO7EJuobUhekJhjQqMCoMaGNJo3+a8sVhWmZ0oDDiVRSeffLQsv+WOmXz+o2csEcFro1P
        6EFbywnFusHom1MXpGWsMFAIczeIQlmoY7pwygqldfdLqKsYYYAezxETQZ1T7Re0vYQH1qmt/D44GMfw
        NxOuLRGc4j2mtSu/od/lF0hwzqYFbhSl68nHJ3t3P/Kv1swukLATP1FP5x8VQ4R7h6rUvCendgLJFwiF
        uLeonyWk+t+DhIIxG1U+BTd9EET9OJf+9UhyhNEzTCi5XuKTs5HDgwgZHeiK0uX56N/qnGeUnB13njoW
        OUWdI5C88G4wA3uG9OGCM+WQcpT4HghVleSFd/7Jo7QvFPExgHSj5GhrHIbMKWKX/tUhdLnpHHyB07jA
        fldX9ujoubetHUYaF3jkQ2RpPK7xN0uy7XDpU70pRro3jTNX6r4b8EwAxXLcdZ//AgcEzvNduvH8UN7M
        QGqOf9dwrkBCQoMOc95iH6gycvlhWz0MulwIJ2zkQbc0LrPpA1VGMn2gyvgZ8SGZ2MymD1QZyfSBKuPj
        lAz4BWKCRR+oMpLpA1VmnCNfhFss/gHu+5deIT/NrgAAAABJRU5ErkJggg==
</value>
  </data>
</root>