<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABJdJREFUeF7t
        nP1x2zAMxT1CR+gI3aAdoRs0GyR/O+3FGzQbpBskGzQbpBskGzgbsHoCVbMybEC2JQEUfnfvnHP0QeqZ
        BEhRWgVBEARBEARVs0kfV7fp22qd7ho9Nn//bj5fG6WeXvP/Hhvdtftg3+ACkAEP7UXev/BDhWM8tMcM
        BvA9fWkv3Dpt84UcQzg2zvEpnzXYA0ZQV8NdwPGEc+LcQYZiw/RG9IUyLD7WUIDmL9B8usulWxDou9fp
        pbgI1vSynNayTleNxgzYl9K2iS1fc6krhczgKq/TbfrTfN43nzdtIOZ+xfiOEoSbdtt1evu3/2m6ykeu
        DEozuQofF0zAxT2nC8G+OAYZyp/nuB7ykSrhNDOeRklHcUwcmz/nMVViyvBu6rnR+AM2SixwLq4Mh+S8
        +xpmxnvbrUwNxZr3XlkOy22gp1+gLpuivn2+aQycWx9ftj5TYu04Axdikz7kveYDZdCb8pL3csI6bXoV
        4HWbfuU97IAycWXd1ybvYRw0Z74C/wu/RqtoW4qLrkszUWilmzqEtvtCXU1DOT5f+J2Q0di/D0FJiZx9
        jTFWuhi61jF9ansqlBLz9ehktpXoWsdz3toPusGjwRavy0783TKlroury04Ws8WmYNIg8Clv6Q+5lWzz
        lkbQTJGYDn4Cuu7Y0DyX1F1ZHnNokdJgU92WtG7KU2Z1CDnjes1bzoxmZO5yMq6Hm3pK8aOG7qpDvh1s
        II7IE4n3eUv/0D16ro6dDEw4SrdDa4gfHXIcMZDaSzm653S3j5z+GpiJkDKsGgJ6hxzYDWRafMF2qg2u
        jqVmhytUqdrg6lhqdrhClaoNro6lZocrVKna4OpYanakwdKygvp73nJGIu0tZSLtjYHhTiYGhsuZOpHv
        ipqYOpFuThmZlr4A0iDYxLpfOdDF9PvkSJlWDXFEjh9veUsDyH2rs8XJDNLicWO3cGORg7nnRuRll36X
        AckrMg0MCPvI3RZU50I5k6m9plmbXy3OoFmvbDaLlFf4+cq45MzKWDDvo2kltOTUy+MImmckjddF00ro
        XSK2H9jRPCNpunV0aEa0JJtjE60ZyKzczEDIE46dbL0dgczQvXXC3eyD5hk9ko3uS98yIH8PHrXNWfOM
        HgkXYr7gSAFcawbkbzzVoplS2QkZzXXeczpwTl02Vcp2UnKUYabQ4HGKXyDOoRn0HZZjU3TTKn09jjIh
        iWOeZ0SpxZkCoW+/bmPSqVA8Q9c0JE5otaDua194jfjP5vN69SN9Zk3Cd/gftqFtL/FWbEnuTdG/n8qP
        HJuCX7F+nOJJjk0B+hH9VELLPfctps5NoYCrmZAcV0g6UBZczPNbr3NTAE3dz2HMU2tESZhSQAM2pMhj
        Bn50S5s9I0rCFAZkZGTOuf069NYea8jqkDDlCBRrkDIjEcACb3RvfaPQqvB9p03bFZ5zQcIUg4QpBglT
        DBKmGCRMMUiYYpAwxSBhikHCFIOEKQYJUwwSphjkXFMwARpcmFNNCTNGZKgpYcYEaE0JMyZEMiXMmIFD
        poQZM9I3JcwwQGdKmGEImBIEQRAEQRCYYrX6C32IqaaRtq7QAAAAAElFTkSuQmCC
</value>
  </data>
</root>